/* DO NOT EDIT THIS FILE - it is machine generated */
#include "jni.h"
/* Header for class org_xidobi_OS */

#ifndef _Included_org_xidobi_OS
#define _Included_org_xidobi_OS
#ifdef __cplusplus
extern "C" {
#endif

/*
 * Class:     org_xidobi_OS
 * Method:    CreateFile
 * Signature: (Ljava/lang/String;IIIIII)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_CreateFile
  (JNIEnv *, jobject, jstring, jint, jint, jint, jint, jint, jint);

/*
 * Class:     org_xidobi_OS
 * Method:    CloseHandle
 * Signature: (I)Z
 */
JNIEXPORT jboolean JNICALL Java_org_xidobi_OS_CloseHandle
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_xidobi_OS
 * Method:    GetCommState
 * Signature: (ILorg/xidobi/structs/DCB;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_xidobi_OS_GetCommState
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    SetCommState
 * Signature: (ILorg/xidobi/structs/DCB;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_xidobi_OS_SetCommState
  (JNIEnv *, jobject, jint, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    CreateEventA
 * Signature: (IZZLjava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_CreateEventA
  (JNIEnv *, jobject, jint, jboolean, jboolean, jstring);

/*
 * Class:     org_xidobi_OS
 * Method:    WriteFile
 * Signature: (I[BILorg/xidobi/structs/INT;Lorg/xidobi/structs/OVERLAPPED;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_xidobi_OS_WriteFile
  (JNIEnv *, jobject, jint, jbyteArray, jint, jobject, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    ReadFile
 * Signature: (I[BILorg/xidobi/structs/INT;Lorg/xidobi/structs/OVERLAPPED;)Z
 */
JNIEXPORT jboolean JNICALL Java_org_xidobi_OS_ReadFile
  (JNIEnv *, jobject, jint, jbyteArray, jint, jobject, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    GetLastError
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_GetLastError
  (JNIEnv *, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    GetOverlappedResult
 * Signature: (ILorg/xidobi/structs/OVERLAPPED;Lorg/xidobi/structs/INT;Z)Z
 */
JNIEXPORT jboolean JNICALL Java_org_xidobi_OS_GetOverlappedResult
  (JNIEnv *, jobject, jint, jobject, jobject, jboolean);

/*
 * Class:     org_xidobi_OS
 * Method:    WaitForSingleObject
 * Signature: (II)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_WaitForSingleObject
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     org_xidobi_OS
 * Method:    RegOpenKeyExA
 * Signature: (ILjava/lang/String;IILorg/xidobi/structs/HKEY;)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_RegOpenKeyExA
  (JNIEnv *, jobject, jint, jstring, jint, jint, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    RegCloseKey
 * Signature: (Lorg/xidobi/structs/HKEY;)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_RegCloseKey
  (JNIEnv *, jobject, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    RegEnumValueA
 * Signature: (Lorg/xidobi/structs/HKEY;I[BLorg/xidobi/structs/INT;ILorg/xidobi/structs/INT;[BLorg/xidobi/structs/INT;)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_RegEnumValueA
  (JNIEnv *, jobject, jobject, jint, jbyteArray, jobject, jint, jobject, jbyteArray, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    malloc
 * Signature: (I)I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_malloc
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_xidobi_OS
 * Method:    free
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_org_xidobi_OS_free
  (JNIEnv *, jobject, jint);

/*
 * Class:     org_xidobi_OS
 * Method:    sizeOf_OVERLAPPED
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_sizeOf_1OVERLAPPED
  (JNIEnv *, jobject);

/*
 * Class:     org_xidobi_OS
 * Method:    sizeOf_HKEY
 * Signature: ()I
 */
JNIEXPORT jint JNICALL Java_org_xidobi_OS_sizeOf_1HKEY
  (JNIEnv *, jobject);


#ifdef __cplusplus
}
#endif
#endif
